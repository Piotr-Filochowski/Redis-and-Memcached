version: '3.8'
services:
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
      - "11211:11211"
  grafana:
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    links:
      - prometheus
    image: grafana/grafana
    depends_on:
      - influxdb
      - prometheus
  influxdb:
    image: influxdb:1.7
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      INFLUXDB_DB: actualdb
  prometheus:
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    image: prom/prometheus
  postgres-user-service-redis:
    image: 'postgres:latest'
    container_name: postgres-user-redis
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      - POSTGRES_USER=postgres-user-redis
      - POSTGRES_PASSWORD=postgres-user-redis
    ports:
      - "5432:5432"
  postgres-user-service:
    image: 'postgres:latest'
    container_name: postgres-user-service
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      - POSTGRES_USER=postgres-user-service
      - POSTGRES_PASSWORD=postgres-user-service
    ports:
      - "5433:5432"
  postgres-user-service-memcached:
    image: 'postgres:latest'
    container_name: postgres-user-service-memcached
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      - POSTGRES_USER=postgres-user-memcached
      - POSTGRES_PASSWORD=postgres-user-memcached
    ports:
      - "5434:5432"
  user-service-redis:
    volumes:
      - ./data/users_dataset.csv:/users_dataset.csv
      - ./data/users_dataset2.csv:/users_dataset2.csv
    build:
      context: ./user-service-redis
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user-redis:5432/postgres-user-redis
      - SPRING_DATASOURCE_USERNAME=postgres-user-redis
      - SPRING_DATASOURCE_PASSWORD=postgres-user-redis
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    depends_on:
      - postgres-user-service-redis
      - redis
  user-service:
    volumes:
      - ./data/users_dataset.csv:/users_dataset.csv
      - ./data/users_dataset2.csv:/users_dataset2.csv
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user-service:5432/postgres-user-service
      - SPRING_DATASOURCE_USERNAME=postgres-user-service
      - SPRING_DATASOURCE_PASSWORD=postgres-user-service
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    depends_on:
      - postgres-user-service
  user-service-memcached:
    volumes:
      - ./data/users_dataset.csv:/users_dataset.csv
      - ./data/users_dataset2.csv:/users_dataset2.csv
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user-service-memcached:5432/postgres-user-memcached
      - SPRING_DATASOURCE_USERNAME=postgres-user-memcached
      - SPRING_DATASOURCE_PASSWORD=postgres-user-memcached
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    depends_on:
      - postgres-user-service-memcached

volumes:
  cache:
    driver: local

  grafana-storage:
    external: true
  influxdb-storage:
    external: true